<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 스프링 데이터베이스 연동 관련 -->
	<jee:jndi-lookup
		id="dataSource" 
		resource-ref="true"
		jndi-name="java:comp/env/jdbc/mysql"/>
	
	<!-- mysql; TransactionManager -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" 
		id="transactionManager" 
		p:dataSource-ref="dataSource"/>
	
	<!-- mybatis-spring; SqlSessionFactgoryBean -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean" 
		p:dataSource-ref="dataSource"
		p:configLocation="classpath:com/koreait/matjip/mybatis/config.xml"/>
	
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryBean"/>		
	</bean>
		
		
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 웹사이트에서 공통으로 사용할 빈들	@Service, @Repository ...   -->
	<context:component-scan base-package="com.koreait.matjip.model"/>
	
	<!-- 해시값 변환 빈 등록 -->
	<bean class="com.koreait.matjip.util.HashBuilder" id="hashBuilder"/>			
	
	
	<!-- 자바객체와 JSON간의 변환을 자동으로 처리해주는 컨버터 등록  -->
	<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<value>
				application/json;charset=utf-8
				text/html;charset=utf-8
			</value>
		</property>
	</bean>
	
	<!-- 어댑터 등록 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list value-type="java.util.ArrayList">
				<ref bean="mappingJackson2HttpMessageConverter"/>
			</list>
		</property>
	</bean>	
	
	<!-- 일괄적으로 모든 서비스에 적용할 때는 이렇게 해당; 혹은 @어노테이션을 사용하여 필요한 메서드마다 넣어줄 수 있음 -->
	<!-- 트랜잭션 설정 xml에 설정하는 것을 가리켜; 선언적설정 -->
	<!-- 개발자 대신 트랜잭션(관련 기술에 알맞게 - mybatis, hibernate, jpa...)을 처리해 주는 트랜잭션 매니저 관점을 두자; 일 시키는 부장님 감시 -->
	<!-- 	
	<tx:advice id="txtAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="regist" propagation="REQUIRED"/>			
		</tx:attributes>						
	</tx:advice>	
	-->
	<!-- 어디를 감시할 것인가; 서비스! 모든 서비스에 적용; 이름이 무엇이든 서비스로 끝나는 모든 것(Impl 포함) -->
	<!-- 
	<aop:config>
		<aop:pointcut expression="execution(public * com.koreait.matjip.model..*Service.*(..))" id="serviceCut"/>
		<aop:advisor advice-ref="txtAdvice" pointcut-ref="serviceCut"/>	
	</aop:config>
 	-->
		
</beans>
